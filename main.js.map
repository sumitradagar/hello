{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/currency/currency.component.css","webpack:///./src/app/currency/currency.component.html","webpack:///./src/app/currency/currency.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/language/language.component.css","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/region/region.component.css","webpack:///./src/app/region/region.component.html","webpack:///./src/app/region/region.component.ts","webpack:///./src/app/services/country.service.ts","webpack:///./src/app/single-view/single-view.component.css","webpack:///./src/app/single-view/single-view.component.html","webpack:///./src/app/single-view/single-view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n\\r\\n  <nav class=\\\"navbar navbar-light bg-light\\\">\\r\\n    <span class=\\\"navbar-brand mb-0 h1\\\">Countries of the world</span>\\r\\n  </nav>\\r\\n\\r\\n<!-- <app-country></app-country> -->\\r\\n<!-- <app-root></app-root> -->\\r\\n<!-- <app-home></app-home> -->\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { CountryService } from './services/country.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { CountryComponent } from './country/country.component';\nimport { HomeComponent } from './home/home.component';\nimport { RouterModule } from '@angular/router';\nimport { LanguageComponent } from './language/language.component';\nimport { CurrencyComponent } from './currency/currency.component';\nimport { RegionComponent } from './region/region.component';\nimport { SingleViewComponent } from './single-view/single-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryComponent,\n    HomeComponent,\n    LanguageComponent,\n    CurrencyComponent,\n    RegionComponent,\n    SingleViewComponent,\n\n  ],\n  imports: [\n    HttpModule,\n    BrowserModule,\n    RouterModule.forRoot(\n      [{path:'',component:HomeComponent},\n    {path:'country',component:CountryComponent},\n    {path:'language',component:LanguageComponent},\n    {path:'currency',component:CurrencyComponent},\n    {path:'region/:name',component:RegionComponent},\n    {path:'single-view/:name',component:SingleViewComponent}\n  ]\n    )\n  ],\n  providers: [CountryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".column{\\r\\n    margin: 1vh\\r\\n}\\r\\n.right{\\r\\n    float: right;\\r\\n    cursor: pointer;\\r\\n}\\r\\nbutton:hover{\\r\\n    background-color: blue\\r\\n}\\r\\np:hover{\\r\\n    background-color:#aaa;\\r\\n    cursor: pointer\\r\\n}\\r\\ndiv:hover{\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<html>\\n\\n<head>\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width,user-scalable=no,initial-scale=1\\\">\\n\\n  <title>Country</title>\\n</head>\\n\\n<body>\\n  <nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <span class=\\\"navbar-brand mb-0 h1\\\">All Country View</span>\\n    <button (click)=\\\"view()\\\" class=\\\"right\\\">back to previous</button>\\n  </nav>\\n\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row  justify-content-around\\\">\\n      <div *ngFor='let c of modal' class=\\\"col-sm-3 column\\\">\\n\\n        <div class=\\\"card  \\\" style=\\\"width: 18rem;\\\">\\n\\n          <div class=\\\"card-body\\\">\\n            <ul class=\\\"list-group list-group-flush\\\">\\n              <div class=\\\"card-header\\\">\\n                <a class=\\\"card-title \\\" [routerLink]=\\\"['/single-view' , c.name]\\\">\\n                  <h3>{{ c.name }}</h3>\\n                </a>\\n\\n              </div>\\n              <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                <h6>Capital:</h6>\\n                <p class=\\\"card-text text-sm-right\\\">{{ c.capital }}</p>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                <h6>Region:</h6>\\n                <p class=\\\"card-text text-sm-right\\\" [routerLink]=\\\"['/region' , c.region]\\\">{{ c.region }}</p>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-start \\\" [routerLink]=\\\"['/language']\\\">\\n                <h6>Language:</h6>\\n                <p *ngFor='let lang of c.languages'>{{ lang }}, </p>\\n              </li>\\n\\n              <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                <h6>CountryCode(Alpha2) :</h6>\\n                <p class=\\\"card-text text-sm-right\\\">{{ c.cca2 }}</p>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                <h6> CountryCode(Alpha3) :</h6>\\n                <p class=\\\"card-text text-sm-right\\\">{{ c.ccn3 }}</p>\\n              </li>\\n              <li class=\\\"list-group-item d-flex justify-content-start\\\">\\n                <h6>Currency : </h6>\\n                <p class=\\\"card-text text-sm-right\\\" [routerLink]=\\\"['/currency']\\\">{{ c.currency }}</p>\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <div>\\n\\n    </div>\\n  </div>\\n</body>\\n\\n</html>\"","import { Router, ActivatedRoute } from '@angular/router';\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../services/country.service';\nimport { Country } from './country';\n\n\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit {\n  // country:any[];\n  modal: Country[];\n  //initialise service,Router,ActivatedRoute\n  constructor(private service: CountryService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    //call the function from service component that return observable\n    this.service.getallCountry()\n      .subscribe(\n        countries => {\n          //here map is used to convert in to array \n          this.modal = countries.map(\n            ({ name, languages, cca2, ccn3, region, currency, capital }) => ({\n              name: name && name.common, languages: Object.keys(languages), cca2: cca2, capital: capital,\n              ccn3: ccn3, region: region, currency: currency\n            })\n          );\n        }, error => {\n          alert(\"An unexpected error occured\");\n          console.log(error);\n        }\n      );\n\n\n  }\n  //function used to navigate to the previous page\n  view() {\n    this.router.navigate(['/']);\n  }\n\n\n}\n","module.exports = \".column{\\r\\n    margin:2vh\\r\\n    \\r\\n}\\r\\n.right{\\r\\n    float: right;\\r\\n    cursor: pointer\\r\\n}\\r\\nbutton:hover{\\r\\n    background-color: blue\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <span class=\\\"navbar-brand mb-0 h1\\\">All Country View</span>\\n    <!-- create a button and set click event -->\\n    <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">back to previous</button>\\n  </nav>\\n\\n\\n\\n<div class=\\\"container-fluid\\\"><h3>{{name}}</h3>\\n  <div \\n  class=\\\"row\\\">\\n    <div  *ngFor = 'let t of currency '\\n    class=\\\"col-sm-3 column\\\">\\n    <div *ngFor='let c of t.currencies'\\n    class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n      <div class=\\\"card-header\\\">\\n        {{t.name}}\\n      </div>\\n      <ul  class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item\\\">CurrencyCode :{{c.code}}</li>\\n        <li class=\\\"list-group-item\\\">CurrencyName :{{c.name }}</li>\\n        <li class=\\\"list-group-item\\\">CurrencySymbol :{{ c.symbol }}</li>\\n      </ul>\\n    </div>\\n    \\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n  \"","import { Router,ActivatedRoute } from '@angular/router';\nimport { CountryService } from './../services/country.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.css']\n})\nexport class CurrencyComponent implements OnInit {\ncurrency:any[];\n\n  constructor(private service:CountryService,private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.service.getCurrency()//call getCurrency method from service to get detail\n    .subscribe(\n      currency=>{\n      this.currency = currency;//fill the currency array\n      },\n      error=>{\n        alert(\"An Unexpected error occured\");\n        console.log(error);\n      }\n    )\n  \n  }\n// it is used to navigate back\n  viewAll(){\n    this.router.navigate(['/country']);\n  }\n\n\n}\n","module.exports = \"img {\\r\\n    /* Set rules to fill background */\\r\\n    min-height: 100%;\\r\\n    min-width: 1024px;\\r\\n      \\r\\n    /* Set up proportionate scaling */\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n      \\r\\n    /* Set up positioning */\\r\\n    position: fixed;\\r\\n    top: 5;\\r\\n    left: 0;\\r\\n  }\\r\\n  \\r\\n  @media screen and (max-width: 1024px) { /* Specific to this particular image */\\r\\n    img {\\r\\n      padding-top: 0vh;\\r\\n      \\r\\n      left: 50%;\\r\\n      margin-left: -512px;   /* 50% */\\r\\n    }\\r\\n  }\"","module.exports = \"\\n<div routerLink=\\\"/country\\\">\\n\\n\\n <div>\\n   <img [src]=\\\"imageUrl\\\"  class=\\\"img-fluid\\\" alt=\\\"Responsive image\\\">\\n </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\nimageUrl=\"assets/image2.png\";\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".column{\\r\\n    margin: 2vh\\r\\n}\\r\\n\\r\\n.right{\\r\\n    float: right;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton:hover{\\r\\n    background-color: blue\\r\\n}\\r\\n\"","module.exports = \"<!-- <div>\\n  <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">back to previous</button>\\n</div> -->\\n<html>\\n\\n<head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n<title>My page</title>\\n</head>\\n<body>\\n<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <span class=\\\"navbar-brand mb-0 h1\\\">Countries with same language</span>\\n  <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">back to previous</button>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngFor='let t of language ' class=\\\"col-sm-3 column\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-header\\\">\\n          {{ t.name }}\\n        </div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li class=\\\"list-group-item\\\">alpha2Code :{{t.alpha2Code}}</li>\\n          <li class=\\\"list-group-item\\\">alpha2Code :{{t.alpha3Code}}</li>\\n          <li class=\\\"list-group-item\\\">capital :{{ t.capital }}</li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</body>\\n</html>\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../services/country.service';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit {\nlanguage:any[];//declare an empty array\n\n//initialise the service,Router,ActivatedRoute\n  constructor(private service:CountryService,private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    //call the method\nthis.service.getLanguage()\n.subscribe(\n  response=>{\n  this.language = response.json();\n},\nerror=>{\n  alert(\"An unexpected error occured\");\n  console.log(error);\n}\n);\n  }\n//used to navigate back\n  viewAll(){\n    this.router.navigate(['/country']);\n  }\n\n}\n","module.exports = \".column{\\r\\n    padding: 2vh;\\r\\n}\\r\\n.right{\\r\\n    float: right;\\r\\n    cursor: pointer\\r\\n}\\r\\nbutton:hover{\\r\\n    background-color: blue\\r\\n}\\r\\n\"","module.exports = \"<html>\\n<head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n\\n  <title>Region</title>\\n</head>\\n<body>\\n<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <span class=\\\"navbar-brand mb-0 h1\\\">Single Country View</span>\\n    <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">back to previous</button>\\n  </nav>\\n\\n<!-- <div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-around\\\"><h1>{{ regionName}}</h1>\\n    <div *ngFor = 'let r of regionInfo'\\n    class=\\\"col-sm-3\\\">\\n\\n    <div *ngIf =\\\"regionName == r.region\\\" \\n    class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"{{ r.flag }}\\\" alt=\\\"Card image cap\\\">\\n      <h3></h3>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Country :{{ r.name }}</h5>\\n        <p class=\\\"card-text\\\">Region :{{ r.region}}</p>\\n        <p class=\\\"card-text\\\">Capital :{{ r.capital}}</p>\\n        <p class=\\\"card-text\\\">Subregion :{{r.subregion}}</p>\\n        <p class=\\\"card-text\\\">Timezone :{{r.timezones}}</p>\\n      </div>\\n    </div>\\n    </div>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"container\\\"><h1> Common Region Name:{{ regionName }}</h1>\\n  <div class=\\\"row justify-content-around\\\">\\n    <div \\n    *ngFor = 'let r of regionInfo'class=\\\"col-sm-6 column\\\">\\n      <div *ngIf =\\\"regionName == r.region\\\"\\n      class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{ r.flag }}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Country :{{ r.name }}</h5>\\n          <p class=\\\"card-text\\\">Region :{{ r.region}}</p>\\n        </div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li class=\\\"list-group-item\\\">Capital :{{ r.capital}}</li>\\n          <li class=\\\"list-group-item\\\">Subregion :{{r.subregion}}</li>\\n          <li class=\\\"list-group-item\\\">Timezone :{{r.timezones}}</li>\\n        </ul>\\n        \\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</body>\\n</html>\\n\\n\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { CountryService } from './../services/country.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.css']\n})\nexport class RegionComponent implements OnInit {\nregions:any[];\nregionInfo:any[]; \nregionName;\n\n constructor(private service:CountryService,private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params=>{\n      let regionName = params.get('name');\n    \nthis.service.getRegion(regionName)\n.subscribe(\n  region=>{\n  this.regions = region;\n  //iterate the array\n  for(let i in this.regions){\n    if(regionName == this.regions[i].region)\n      this.regionName = this.regions[i].region;//access region name and store in property\n      }\n    },\n    //handle the error\n    error=>{\n      alert(\"An unexpected error occured\");\n      console.log(error);\n    }\n  )\n  //call the method \nthis.service.getRegionFlag()\n.subscribe(\n  response=>{\n  this.regionInfo = response;\n},\nerror=>{\n  console.log(error);//handle the error\n}\n)\n})\n  }\n  \n  viewAll(){\n    this.router.navigate(['/country']);\n  }\n \n}\n","// this service is used in whole application \n\n\n      import { Injectable } from '@angular/core';\n      import { Http } from '@angular/http';\n      import { Observable} from 'rxjs';\n      import { map } from 'rxjs/operators';\n\n      @Injectable({\n        providedIn: 'root'\n      })\n      export class CountryService {\n        //store the url of api in variable\n      private url ='https://raw.githubusercontent.com/mledoze/countries/master/countries.json';\n      private countryUrl ='https://restcountries.eu/rest/v2/all?fields=name;capital;region;single-country;flag';\n      //initialise the http service\n      constructor(private http:Http) { }\n      //this method used in CountryComponent return country details\n        getallCountry(){\n          return this.http.get(this.url)\n          .pipe(\n            map(response=>response.json()))//map is used to convert json data into array\n          \n        }\n        //this method used in LanguageComponent\n        getLanguage(){\n          return this.http.get('https://restcountries.eu/rest/v2/lang/es');//making get request to server\n        }\n        //this method used in currency component\n        getCurrency(){\n          return this.http.get('https://restcountries.eu/rest/v2/all?fields=name;capital;currencies')//making get request to server\n          .pipe(\n            map(response=>response.json())//map is used to convert json data into array\n          )\n        }\n        //this method used in RegionComponent\n        getRegion(region:string){\n          return this.http.get('https://restcountries.eu/rest/v2/all?fields=name;capital;region;country;flag'+region+\"/\")\n          .pipe(\n            map( response=>response.json())//map is used to convert json data into array\n          )\n        }\n        //this method  used in SingleViewComponent\n        getId(name:string){\n        return this.http.get('https://restcountries.eu/rest/v2/all?fields=name;capital;region;country;flag' + name + \"/\")\n      .pipe(\n        map( response=>response.json())//map is used to convert json data into array\n      )}\n      //it is used in SingleViewComponent\n      getRegionFlag(){\n        return this.http.get('https://restcountries.eu/rest/v2/all?fields=name;capital;region;country;flag;subregion;timezones')\n        .pipe(\n          map( response=>response.json())//map is used to convert json data into array\n        )\n      }\n    \n    \n    }\n","module.exports = \".right{\\r\\n    float: right;\\r\\n    cursor: pointer;\\r\\n}\\r\\nbutton:hover{\\r\\n    background-color: blue\\r\\n}\\r\\n.column{\\r\\n    margin: 5vh\\r\\n}\"","module.exports = \"\\n<html>\\n<head>\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n\\n  <title>Single country</title>\\n</head>\\n\\n<body>\\n\\n<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <span class=\\\"navbar-brand mb-0 h1\\\">Single Country View</span>\\n    <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">View all countries</button>\\n  </nav>\\n\\n<!-- \\n<div>\\n  <button (click)=\\\"viewAll()\\\" class=\\\"right\\\">View all countries</button>\\n</div> -->\\n\\n\\n\\n<div class=\\\"card bg-dark text-white column\\\">\\n  <img class=\\\"card-img\\\" src=\\\"{{ flag }}\\\" alt=\\\"Card image\\\">\\n  <div class=\\\"card-img-overlay\\\">\\n    <h3 class=\\\"card-title\\\">Country :{{ name }}</h3>\\n    <p class=\\\"card-text\\\">Capital : {{ capital}}</p>\\n    <p class=\\\"card-text\\\">Region : {{ region }}</p>\\n  </div>\\n  </div>\\n  </body>\\n</html>\\n\\n\\n\\n\\n\"","\nimport { CountryService } from './../services/country.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ICountry } from './singleview';\n\n@Component({\n  selector: 'app-single-view',\n  templateUrl: './single-view.component.html',\n  styleUrls: ['./single-view.component.css']\n})\nexport class SingleViewComponent implements OnInit {\n  country: ICountry[];\n  regions: any[];\n  name;\n  region;\n  capital;\n  flag;\n  constructor(private service: CountryService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // let name =this.route.snapshot.paramMap.get('name');\n    //using route paramMap get name\n    //paramMap is an observable so subscribe it\n\n    this.route.paramMap \n    .subscribe(\n      params => {\n        let name = params.get('name');\n//call the getId method via service object\n this.service.getId(name)          \n        .subscribe(\n            country => {\n            this.country = country;// fill the country array\n            // iterate the country array to access the details\n            for (let i in this.country) {\n              if (name == this.country[i].name)// check the route name equal to country name\n              {\n              this.name = this.country[i].name;//access the country name\n                this.capital = this.country[i].capital;//access capital name\n                this.region = this.country[i].region;//access region name\n              }\n              else { }\n            }\n            //to access flag image call method getRegionFlag\n            this.service.getRegionFlag()\n              .subscribe(\n                response => {\n                this.regions = response;//fill the regions array\n                //iterate the regions array\n                for (let j in this.regions) {\n                  if (name == this.regions[j].name) {//check the country name\n                    this.flag = this.regions[j].flag;\n                  }\n                }\n              }\n              )\n          },\n          //handle the error\n          error=>{\n            alert(\"unexpected error\");\n            console.log(error);\n          }\n        )\n\n\n      }\n\n\n\n      )\n  }\n  //method to navigate to the country component\n  viewAll() {\n    this.router.navigate(['/country']);\n  }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}